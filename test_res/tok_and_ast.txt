0: Token { token: 16, value: "let" }
1: Token { token: 50, value: "collection" }
2: Token { token: 10, value: ";" }
3: Token { token: 42, value: "for" }
4: Token { token: 3, value: "(" }
5: Token { token: 50, value: "tmp" }
6: Token { token: 43, value: "in" }
7: Token { token: 51, value: "collection" }
8: Token { token: 4, value: ")" }
9: Token { token: 5, value: "{" }
10: Token { token: 6, value: "}" }
11: Token { token: 42, value: "for" }
12: Token { token: 3, value: "(" }
13: Token { token: 50, value: "i" }
14: Token { token: 43, value: "in" }
15: Token { token: 50, value: "0" }
16: Token { token: 15, value: ".." }
17: Token { token: 50, value: "10" }
18: Token { token: 4, value: ")" }
19: Token { token: 5, value: "{" }
20: Token { token: 6, value: "}" }
21: Token { token: 21, value: "void" }
22: Token { token: 50, value: "foo" }
23: Token { token: 3, value: "(" }
24: Token { token: 50, value: "arg" }
25: Token { token: 9, value: ":" }
26: Token { token: 20, value: "qbit" }
27: Token { token: 11, value: "," }
28: Token { token: 50, value: "arg2" }
29: Token { token: 9, value: ":" }
30: Token { token: 20, value: "qbit" }
31: Token { token: 4, value: ")" }
32: Token { token: 5, value: "{" }
33: Token { token: 6, value: "}" }
34: Token { token: 16, value: "let" }
35: Token { token: 50, value: "name1" }
36: Token { token: 10, value: ";" }
37: Token { token: 18, value: "const" }
38: Token { token: 50, value: "name2" }
39: Token { token: 10, value: ";" }
40: Token { token: 17, value: "var" }
41: Token { token: 50, value: "name3" }
42: Token { token: 10, value: ";" }
43: Token { token: 16, value: "let" }
44: Token { token: 50, value: "name4" }
45: Token { token: 9, value: ":" }
46: Token { token: 20, value: "qbit" }
47: Token { token: 10, value: ";" }
48: Token { token: 18, value: "const" }
49: Token { token: 50, value: "name5" }
50: Token { token: 9, value: ":" }
51: Token { token: 20, value: "qbit" }
52: Token { token: 10, value: ";" }
53: Token { token: 17, value: "var" }
54: Token { token: 50, value: "name6" }
55: Token { token: 9, value: ":" }
56: Token { token: 20, value: "qbit" }
57: Token { token: 10, value: ";" }
58: Token { token: 51, value: "name1" }
59: Token { token: 12, value: "=" }
60: Token { token: 52, value: "0" }
61: Token { token: 10, value: ";" }
62: Token { token: 16, value: "let" }
63: Token { token: 50, value: "name7" }
64: Token { token: 12, value: "=" }
65: Token { token: 52, value: "0" }
66: Token { token: 10, value: ";" }
67: Token { token: 18, value: "const" }
68: Token { token: 50, value: "name8" }
69: Token { token: 12, value: "=" }
70: Token { token: 52, value: "0" }
71: Token { token: 10, value: ";" }
72: Token { token: 17, value: "var" }
73: Token { token: 50, value: "name9" }
74: Token { token: 12, value: "=" }
75: Token { token: 52, value: "0" }
76: Token { token: 10, value: ";" }
77: Token { token: 16, value: "let" }
78: Token { token: 50, value: "name10" }
79: Token { token: 9, value: ":" }
80: Token { token: 50, value: "type" }
81: Token { token: 12, value: "=" }
82: Token { token: 52, value: "0" }
83: Token { token: 10, value: ";" }
84: Token { token: 18, value: "const" }
85: Token { token: 50, value: "name11" }
86: Token { token: 9, value: ":" }
87: Token { token: 51, value: "type" }
88: Token { token: 12, value: "=" }
89: Token { token: 52, value: "0" }
90: Token { token: 10, value: ";" }
91: Token { token: 17, value: "var" }
92: Token { token: 50, value: "name12" }
93: Token { token: 9, value: ":" }
94: Token { token: 51, value: "type" }
95: Token { token: 12, value: "=" }
96: Token { token: 52, value: "0" }
97: Token { token: 10, value: ";" }
98: Token { token: 19, value: "struct" }
99: Token { token: 50, value: "name13" }
100: Token { token: 5, value: "{" }
101: Token { token: 17, value: "var" }
102: Token { token: 50, value: "field1" }
103: Token { token: 9, value: ":" }
104: Token { token: 20, value: "qbit" }
105: Token { token: 10, value: ";" }
106: Token { token: 17, value: "var" }
107: Token { token: 50, value: "field2" }
108: Token { token: 9, value: ":" }
109: Token { token: 20, value: "qbit" }
110: Token { token: 10, value: ";" }
111: Token { token: 6, value: "}" }
112: Token { token: 16, value: "let" }
113: Token { token: 50, value: "ref1" }
114: Token { token: 9, value: ":" }
115: Token { token: 14, value: "*" }
116: Token { token: 20, value: "qbit" }
117: Token { token: 12, value: "=" }
118: Token { token: 13, value: "&" }
119: Token { token: 51, value: "name7" }
120: Token { token: 10, value: ";" }
121: Token { token: 16, value: "let" }
122: Token { token: 50, value: "arr" }
123: Token { token: 9, value: ":" }
124: Token { token: 20, value: "qbit" }
125: Token { token: 7, value: "[" }
126: Token { token: 52, value: "10" }
127: Token { token: 8, value: "]" }
128: Token { token: 12, value: "=" }
129: Token { token: 7, value: "[" }
130: Token { token: 51, value: "name1" }
131: Token { token: 11, value: "," }
132: Token { token: 51, value: "name2" }
133: Token { token: 11, value: "," }
134: Token { token: 51, value: "name3" }
135: Token { token: 8, value: "]" }
136: Token { token: 10, value: ";" }
137: Token { token: 16, value: "let" }
138: Token { token: 50, value: "val" }
139: Token { token: 9, value: ":" }
140: Token { token: 51, value: "type" }
141: Token { token: 12, value: "=" }
142: Token { token: 14, value: "*" }
143: Token { token: 50, value: "ref" }
144: Token { token: 10, value: ";" }
145: Token { token: 16, value: "let" }
146: Token { token: 50, value: "ref2" }
147: Token { token: 9, value: ":" }
148: Token { token: 14, value: "*" }
149: Token { token: 51, value: "type" }
150: Token { token: 10, value: ";" }
151: Token { token: 18, value: "const" }
152: Token { token: 50, value: "ref3" }
153: Token { token: 9, value: ":" }
154: Token { token: 14, value: "*" }
155: Token { token: 51, value: "type" }
156: Token { token: 10, value: ";" }
157: Token { token: 25, value: "H" }
158: Token { token: 3, value: "(" }
159: Token { token: 13, value: "&" }
160: Token { token: 51, value: "name2" }
161: Token { token: 4, value: ")" }
162: Token { token: 10, value: ";" }
163: Token { token: 51, value: "foo" }
164: Token { token: 3, value: "(" }
165: Token { token: 51, value: "name3" }
166: Token { token: 11, value: "," }
167: Token { token: 51, value: "name1" }
168: Token { token: 4, value: ")" }
169: Token { token: 10, value: ";" }
170: Token { token: 16, value: "let" }
171: Token { token: 50, value: "a" }
172: Token { token: 12, value: "=" }
173: Token { token: 25, value: "H" }
174: Token { token: 3, value: "(" }
175: Token { token: 13, value: "&" }
176: Token { token: 50, value: "b" }
177: Token { token: 4, value: ")" }
Program(
    [
        VariableDecl {
            name: "collection",
            value: None,
            type_: None,
            token: 10,
        },
        For {
            container: VariableCall {
                name: "collection",
            },
            alias: Some(
                "tmp",
            ),
            body: None,
        },
        For {
            container: Range {
                start: Num(
                    0,
                ),
                end: Num(
                    10,
                ),
            },
            alias: Some(
                "i",
            ),
            body: None,
        },
        FunctionDef {
            name: "foo",
            params: [
                "arg",
                "arg2",
            ],
            signature: (
                Type {
                    name: "void",
                    specifier: Void,
                },
                [
                    Type {
                        name: "qbit",
                        specifier: Qbit,
                    },
                    Type {
                        name: "qbit",
                        specifier: Qbit,
                    },
                ],
            ),
            body: None,
        },
        VariableDecl {
            name: "name1",
            value: None,
            type_: None,
            token: 10,
        },
        VariableDecl {
            name: "name2",
            value: None,
            type_: None,
            token: 10,
        },
        VariableDecl {
            name: "name3",
            value: None,
            type_: None,
            token: 10,
        },
        VariableDecl {
            name: "name4",
            value: None,
            type_: Some(
                Type {
                    name: "qbit",
                    specifier: Qbit,
                },
            ),
            token: 16,
        },
        VariableDecl {
            name: "name5",
            value: None,
            type_: Some(
                Type {
                    name: "qbit",
                    specifier: Qbit,
                },
            ),
            token: 18,
        },
        VariableDecl {
            name: "name6",
            value: None,
            type_: Some(
                Type {
                    name: "qbit",
                    specifier: Qbit,
                },
            ),
            token: 17,
        },
        Assignment {
            name: "name1",
            arr_index: None,
            value: Num(
                0,
            ),
        },
        VariableDecl {
            name: "name7",
            value: Some(
                Num(
                    0,
                ),
            ),
            type_: None,
            token: 16,
        },
        VariableDecl {
            name: "name8",
            value: Some(
                Num(
                    0,
                ),
            ),
            type_: None,
            token: 18,
        },
        VariableDecl {
            name: "name9",
            value: Some(
                Num(
                    0,
                ),
            ),
            type_: None,
            token: 17,
        },
        VariableDecl {
            name: "name10",
            value: Some(
                Num(
                    0,
                ),
            ),
            type_: Some(
                Pointer {
                    name: "=",
                    value: None,
                    type_: Type {
                        name: "=",
                        specifier: Custom,
                    },
                },
            ),
            token: 16,
        },
        VariableDecl {
            name: "name11",
            value: Some(
                Num(
                    0,
                ),
            ),
            type_: Some(
                Pointer {
                    name: "=",
                    value: None,
                    type_: Type {
                        name: "=",
                        specifier: Custom,
                    },
                },
            ),
            token: 18,
        },
        VariableDecl {
            name: "name12",
            value: Some(
                Num(
                    0,
                ),
            ),
            type_: Some(
                Pointer {
                    name: "=",
                    value: None,
                    type_: Type {
                        name: "=",
                        specifier: Custom,
                    },
                },
            ),
            token: 17,
        },
        Struct {
            name: "name13",
            types: [
                VariableDecl {
                    name: "field1",
                    value: None,
                    type_: Some(
                        Type {
                            name: "qbit",
                            specifier: Qbit,
                        },
                    ),
                    token: 17,
                },
                VariableDecl {
                    name: "field2",
                    value: None,
                    type_: Some(
                        Type {
                            name: "qbit",
                            specifier: Qbit,
                        },
                    ),
                    token: 17,
                },
            ],
        },
        VariableDecl {
            name: "ref1",
            value: Some(
                Reference {
                    name: "name7",
                },
            ),
            type_: Some(
                Pointer {
                    name: "qbit",
                    value: None,
                    type_: Type {
                        name: "qbit",
                        specifier: Qbit,
                    },
                },
            ),
            token: 16,
        },
        Array {
            name: "arr",
            type_: Type {
                name: "qbit",
                specifier: Qbit,
            },
            elements: [],
            size: Num(
                10,
            ),
        },
        VariableDecl {
            name: "val",
            value: Some(
                Dereference {
                    name: "ref",
                },
            ),
            type_: Some(
                Pointer {
                    name: "=",
                    value: None,
                    type_: Type {
                        name: "=",
                        specifier: Custom,
                    },
                },
            ),
            token: 16,
        },
        VariableDecl {
            name: "ref2",
            value: None,
            type_: Some(
                Type {
                    name: "*",
                    specifier: Custom,
                },
            ),
            token: 16,
        },
        VariableDecl {
            name: "ref3",
            value: None,
            type_: Some(
                Type {
                    name: "*",
                    specifier: Custom,
                },
            ),
            token: 18,
        },
        GateCall {
            name: "H",
            args: [
                Reference {
                    name: "name2",
                },
            ],
        },
        FunctionCall {
            name: "foo",
            args: [
                VariableCall {
                    name: "name1",
                },
                VariableCall {
                    name: ";",
                },
            ],
        },
        VariableDecl {
            name: "a",
            value: Some(
                GateCall {
                    name: "H",
                    args: [
                        Reference {
                            name: "b",
                        },
                    ],
                },
            ),
            type_: None,
            token: 16,
        },
    ],
)
